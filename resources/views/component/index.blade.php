@extends('app')

@section('title', 'Home Page')

@section('content')
<div class="todo">
    <div class="todoHeader">
        <div class="topHeader">
            <h2>Email</h2> | <span>Home</span>
        </div>
        <div class="bodyHeader">
            <form action="">
                <div class="Users--right--btns">
                    <select name="date" id="date" class="select-dropdown doctor--filter">
                        <option>Date of Month</option>
                        <option value="free">Admin</option>
                        <option value="scheduled">Users</option>
                    </select>
                </div>
            </form>
            <form action="" class="formSearch">
                <div class="formInputSearch">
                    <input type="text" value="">
                </div>
                <button class="add-search"><i class="fa-solid fa-magnifying-glass"></i></button>
            </form>
        </div>
        <div class="headerToQuesionRight">
            <button type="button" class="change"><i class="fa-solid fa-cash-register"></i> Thay ƒë·ªïi</button>
            <button type="button" class="create" onclick="CreateComponentForm()"><i class="fa-solid fa-plus"></i> T·∫°o m·ªõi</button>
        </div>
    </div>
    <div class="component-container">
        <div class="component-container-right">
            <div class="component-card">
                @foreach($components as $item)
                <div class="c_card">
                    <img src="{{ asset('assets/images/' . $item->image) }}" alt="Image Description" />
                    <div class="overlay">
                        Th√¥ng tin hi·ªÉn th·ªã
                        <button onclick="showEditComponent({{$item->id}})">xem</button>
                    </div>
                </div>
                @endforeach
            </div>
        </div>
    </div>
</div>

<div class="model" id="createComponent">
    <div class="modelCreateFromBig">
        <form method="POST" action="{{ route('component.store') }}" enctype="multipart/form-data">
        @csrf
            <div class="saveAction">
                <button type="submit">Save changes</button>
                <h2 class="text-center">{{ __('messages.Add New') }}</h5>
            </div>
            <div class="modelForm mt-20">
                <div class="modelFormLeft">
                    @if (Auth::check())
                        <input type="hidden" id="user_id" name="user_id" value="{{ Auth::user()->id }}"/>
                    @endif
                    <div class="form-input-category">
                        <label for="name">{{ __('messages.Name') }}</label>
                        <input type="text" class="input-name" id="" name="name">
                    </div>
                    <div class="modelContent">
                        <div class="modelContentDescription">
                            <div class="form-textarea-category">
                                <label for="description">{{ __('messages.Description') }}</label>
                                <textarea class="textareaBigSize" name="description"></textarea> 
                            </div>
                        </div>
                        <div class="preview">
                            <div class="img-preview">
                                <img id="img-preview" src="{{asset('assets/images/preview.jpg')}}" />
                            </div>
                            <label for="file-input">Upload Image</label>
                            <input accept="image/*" type="file" id="file-input" name="image" />
                        </div>  
                    </div>
                    <div class="form-textarea-category">
                        <label for="description">HTML</label>
                        <textarea id="editor" name="c_html"></textarea> 
                    </div>
                </div>
                <div class="modelFormRight">
                    <div class="form-input-category">
                        <label for="name">{{ __('messages.Link') }}</label>
                        <input type="text" class="input-name" name="link">
                    </div>
                    <div class="form-textarea-category  mt-10">
                        <label for="description">{{ __('messages.CSS') }}</label>
                        <textarea id="editor1" name="c_css"></textarea> 
                    </div>
                    <div class="form-textarea-category">
                        <label for="description" class="mt-10">Javascript</label>
                        <textarea id="editor2" name="c_javascript"></textarea> 
                    </div>
                </div>
            </div>
        </form>
        <div class="BtnCloseCategoryTask" onclick="closeComponentForm()">
            <p>X</p>
        </div>
    </div>
</div>

@if (session('success'))
    <div id="popup-category" class="popup-category success">
        {{ session('success') }}
    </div>
@endif

@if ($errors->any())
    <div id="popup-category" class="popup-category error">
        <ul>
            @foreach ($errors->all() as $error)
                <li>{{ $error }}</li>
            @endforeach
        </ul>
    </div>
@endif


<div class="model" id="showComponentForm">
    <div class="modelCreateFromBig">
        <div class="buttonAction">
            <button class="show" onclick="showTab('show')"><i class="fa-solid fa-eye"></i> Show</button>
            <button class="edit" onclick="showTab('edit')"><i class="fa-solid fa-pen-to-square"></i> Edit</button>
            <button class="delete" onclick="showTab('delete')"><i class="fa-solid fa-trash"></i> Delete</button>
        </div>

        <div class="showContentComponent" id="show">
            <div class="showNameComponent">
                <h3 id="showname"></h3>
                <p id="showdescription"></p>
                <a href="" target="_blank" id="showlinkcomponent"></a>
            </div>
            <div class="showCodeComponent">
                <div class="popupShowCode">
                    <p id="showcomponent1"></p>
                </div>
                <div class="popupShowCode">
                    <p id="showcomponent2"></p>
                </div>
                <div class="popupShowCode">
                    <p id="showcomponent3"></p>
                </div>
            </div>
        </div>

        <div class="editContentQuestion" id="edit" style="display: none;">
            <div class="titleEditError">
                <h2>üåü Kh√°m Ph√° S·ª± ƒê∆°n Gi·∫£n trong Qu·∫£n L√Ω Component! üåü</h2>
                <p>Ch√∫ng t√¥i r·∫•t vui m·ª´ng th√¥ng b√°o r·∫±ng ch·ª©c nƒÉng Ch·ªânh s·ª≠a (Edit) cho Component ƒëang trong qu√° tr√¨nh ho√†n thi·ªán! V·ªõi t√≠nh nƒÉng n√†y, b·∫°n s·∫Ω c√≥ kh·∫£ nƒÉng c·∫≠p nh·∫≠t v√† ƒëi·ªÅu ch·ªânh n·ªôi dung m·ªôt c√°ch d·ªÖ d√†ng, gi√∫p n·ªôi dung c·ªßa b·∫°n lu√¥n n·ªïi b·∫≠t v√† ph√π h·ª£p. B√™n c·∫°nh ƒë√≥, t√≠nh nƒÉng Th√™m cho ph√©p b·∫°n b·ªï sung nh·ªØng Component m·ªõi ƒë·∫ßy s√°ng t·∫°o, trong khi t√≠nh nƒÉng X√≥a gi√∫p lo·∫°i b·ªè nh·ªØng th√†nh ph·∫ßn kh√¥ng c√≤n c·∫ßn thi·∫øt. Ch√∫ng t√¥i ƒëang n·ªó l·ª±c mang ƒë·∫øn cho b·∫°n tr·∫£i nghi·ªám qu·∫£n l√Ω Component t·ªët nh·∫•t, gi√∫p t·ªëi ∆∞u h√≥a quy tr√¨nh l√†m vi·ªác v√† n√¢ng cao gi√° tr·ªã cho d·ª± √°n c·ªßa b·∫°n. H√£y c√πng ch·ªù ƒë√≥n nh·ªØng c·∫≠p nh·∫≠t th√∫ v·ªã s·∫Øp t·ªõi!</p>
            </div>
        </div>

        <div class="deleteContentQuestion" id="delete" style="display: none;">
            <form method="POST" id="delete-Component">
                @csrf
                @method('DELETE')
                <input type="hidden" id="component_id" value="{{ $component->id ?? '' }}" />
                <h3 class="text-center">{{ __('messages.Are you sure you want to delete?') }}</h3>
                <p class="text-center" id="deleteComponent">{{ $component->name ?? '' }}</p> 
                <div class="form-btn-delete">
                    <button type="submit">{{ __('messages.Delete') }}</button>
                </div>
            </form>            
        </div>
        <div class="BtnCloseCategoryTask" onclick="closeDeleteComponentForm()">
            <p>X</p>
        </div>
    </div>
</div>



<script>
ClassicEditor
  .create(document.querySelector('#editor'))
  .then(editor => {
    editorInstance = editor; 
  })
  .catch(error => {
      console.error(error);
  });

ClassicEditor
  .create(document.querySelector('#editor1'))
  .then(editor => {
    console.log(editor) 
  })
  .catch(error => {
      console.error(error);
  });
ClassicEditor
  .create(document.querySelector('#editor2'))
  .then(editor => {
    console.log(editor) 
  })
  .catch(error => {
      console.error(error);
  });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const popup = document.querySelector('#popup-category');
        if (popup) {
            popup.style.display = 'block';

            setTimeout(() => {
                popup.style.display = 'none';
            }, 5000);
        }
    });

    function showEditComponent(componentId) {
        const showComponentForm = document.getElementById('showComponentForm');
        showComponentForm.style.display = 'block';
        fetch(`/component/${componentId}`)
        .then(response => response.json())
        .then(data => {
            console.log(data);
            document.getElementById('component_id').value = data.id;
            document.getElementById('showname').innerHTML = data.name;
            document.getElementById('showdescription').innerHTML = data.description;
            document.getElementById('showlinkcomponent').innerHTML = data.link;
            document.getElementById('showlinkcomponent').href = data.link;
            document.getElementById('showcomponent1').innerHTML = data.c_html;
            document.getElementById('showcomponent2').innerHTML = data.c_css;
            document.getElementById('showcomponent3').innerHTML = data.c_javascript;
            document.getElementById('deleteComponent').innerHTML = data.name;
        })
    }
    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('delete-Component').onsubmit = function(event) {
            event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh ƒë·ªông m·∫∑c ƒë·ªãnh c·ªßa form
            
            const componentIdElement = document.getElementById('component_id');
            const componentId = componentIdElement.value; // L·∫•y gi√° tr·ªã component_id

            // Ki·ªÉm tra n·∫øu componentId kh√¥ng r·ªóng
            if (componentId) {
                this.action = `/component/${componentId}`; // Thi·∫øt l·∫≠p action cho form
                this.submit(); // G·ª≠i form
            } else {
                console.error('Component ID is missing.'); // Ghi log l·ªói n·∫øu kh√¥ng t√¨m th·∫•y ID
            }
        };
    });



    function closeDeleteComponentForm() {
        const closeDeleteComponentForm = document.getElementById('showComponentForm')
        if (closeDeleteComponentForm.style.display === 'none' || closeDeleteComponentForm.style.display === '') {
            closeDeleteComponentForm.style.display = 'block'; 
        } else {
            closeDeleteComponentForm.style.display = 'none';
        }
    }
    function showTab(tab) {
        // ·∫®n t·∫•t c·∫£ c√°c tab
        document.getElementById('show').style.display = 'none';
        document.getElementById('edit').style.display = 'none';
        document.getElementById('delete').style.display = 'none';

        // Hi·ªÉn th·ªã tab ƒë∆∞·ª£c nh·∫•n
        document.getElementById(tab).style.display = 'block';
    }
     function CreateComponentForm(){
        const CreateComponentForm = document.getElementById('createComponent')
        if (CreateComponentForm.style.display === 'none' || CreateComponentForm.style.display === '') {
            CreateComponentForm.style.display = 'block'; 
        } else {
            CreateComponentForm.style.display = 'none';
        }
    }

    function closeComponentForm() {
        const CreateComponentForm = document.getElementById('createComponent')
        if (CreateComponentForm.style.display === 'none' || CreateComponentForm.style.display === '') {
            CreateComponentForm.style.display = 'block'; 
        } else {
            CreateComponentForm.style.display = 'none';
        }
    }
    const input = document.getElementById('file-input');
    const image = document.getElementById('img-preview');

    input.addEventListener('change', (e) => {
        if (e.target.files.length) {
            const src = URL.createObjectURL(e.target.files[0]);
            image.src = src;
        }
    });
</script>
@endsection